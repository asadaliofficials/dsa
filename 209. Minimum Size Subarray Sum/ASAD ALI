/**
 * @param {number} target
 * @param {number[]} nums
 * @return {number}
 */
var minSubArrayLen = function (target, nums) {
	let n = nums.length;
	let left = 0;
	let sum = 0;
	let minLen = Infinity;

	for (let right = 0; right < n; right++) {
		sum += nums[right];

		// While current window [left..right] satisfies sum â‰¥ target, try to shrink
		while (sum >= target) {
			minLen = Math.min(minLen, right - left + 1);
			sum -= nums[left];
			left++;
		}
	}

	// If never found a valid subarray, return 0
	return minLen === Infinity ? 0 : minLen;
};
